<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="student">
	<!-- 값전달시 #{getter에서 get을 제외하고, 소문자로 시작하는 이름} OGNL방식 -->
	<insert id="insertStudent" parameterType="student">
		insert into
			student(no, name, tel)
		values(
			seq_student_no.nextval,
			#{name},
			#{tel}
		)
	</insert>
	<!-- parameterType은 생략가능 -->
	<insert id="insertStudentMap">
		insert into
			student(no, name, tel)
		values(
			seq_student_no.nextval,
			#{name},
			#{tel}
		)
	</insert>
	<!-- select태그의 resultType은 필수속성이다. 둘중하나 반드시 작성 -->
	<select id="selectStudentCount" resultType="_int">
		select
			count(*)
		from
			student
	</select>
	<!-- 
		resultset을 mybatis가 자동으로 vo 매핑
		1. 동일한 이름의 setter를 통해 값대입
		2. 자동형변환 처리 
			varchar2, char -> String
			number -> int/double
			date -> java.util.date 
			
		필드명 불일치시
		1. query alias지정 - 대소문자 구분위해 "" 필수
			select reg_date "regDate"...
		2. resultMap - db컬럼과 vo필드(property)를 연결
		3. mybatis-config.xml의 setting태그 mapUnderscoreToCamelCase true 설정
		
	-->
	<select id="selectOneStudent" resultType="student">
		select
			*
		from
			student
		where
			no = #{no}
	</select>
	<!-- 하나씩 연결할때 쓰이는 Map = resultMap -->
	<!-- <select id="selectOneStudent" resultMap="studentMap">
		select
			*
		from
			student
		where
			no = #{no}
	</select> -->
	<!-- 
		db컬럼과 vo필드(property)를 연결.
		1. 이름 불일치 해결
		2. 형변환처리를 임의로 지정
		
		- column과 property가 동일하다면, 해당 자식 태그는 생략가능
		- resultMap은 재사용이 가능하다.
	 -->
	<resultMap type="student" id="studentMap">
		<!-- pk컬럼용 -->
		<id column="no" property="no"/>
		<!-- 나머지 컬럼용 -->
		<result column="name" property="name"/>
		<result column="tel" property="tel"/>
		<result column="reg_date" property="regDate"/>
	</resultMap>
	
	<!-- <select id="selectOneStudentMap" resultType="hashmap">
		select
			no "no",
			name "name",
			tel "tel",
			reg_date "regDate"
		from
			student
		where 
			no = #{no}
	</select> -->
	<select id="selectOneStudentMap" resultType="studentMap">
		select
			*
		from
			student
		where 
			no = #{no}
	</select>
	<resultMap type="map" id="studentMap">
		<id column="no" property="no"/>
		<result column="name" property="name"/>
		<result column="tel" property="tel"/>
		<result column="reg_date" property="regDate"/>
	</resultMap>
	
	<update id="updateStudent">
		update
			student
		set
			name = #{name},
			tel = #{tel}
		where
			no = #{no}
	</update>
		
	<delete id="deleteStudent">
		delete from
			student
		where
			name = #{name}
	</delete>
	
	<select id="selectStudentList" resultType="student">
		select
			*
		from
			student
		order by
			no desc
	</select>
	
	<select id="selectStudentMapList" resultMap="studentMap">
		select
			*
		from
			student
		order by
			no desc
	</select>
</mapper>